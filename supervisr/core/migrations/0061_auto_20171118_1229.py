# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2017-11-18 11:29
from __future__ import unicode_literals

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models

import supervisr.core.models


def migrate_profile_data(apps, schema_editor):
    UserProfile = apps.get_model('supervisr/core', 'UserProfile')
    User = apps.get_model('supervisr/core', 'User')
    old_user_model = apps.get_model('auth', 'User')

    for old_user in old_user_model.objects.all():
       # simply copy the fields you need into the new user. the `id` is the most important field
       new_user = User.objects.create(
           id=old_user.id,   # this is a very important thing to do, because of the generic relations,
           username=old_user.username, # dunno if you need this, put whatever fields you want here
           password=old_user.password,
           email=old_user.email,
           first_name=old_user.first_name,
           last_name=old_user.last_name,
           is_staff=old_user.is_staff,
           is_active=old_user.is_active,
           is_superuser=old_user.is_superuser,
           # works like this, of course. And of course, i don't know if you need this
           # ckeck out django's PermissionsMixin, AbstractUser and AbstractBaseUser for all the fields
           # that the old user model had
       )
       new_user.groups.add(*old_user.groups.all())
       new_user.user_permissions.add(*old_user.user_permissions.all())
       new_user.save()
    for profile in UserProfile.objects.all():
        for key in ['crypt6_password', 'unix_username', 'unix_userid', 'locale', 'news_subscribe']:
            value = getattr(profile, key)
            setattr(profile.user, key, value)

class Migration(migrations.Migration):

    dependencies = [
        ('supervisr/web', '0002_remove_webdomain_profile'),
        ('auth', '0008_alter_user_username_max_length'),
        ('supervisr/core', '0060_auto_20171018_1858'),
    ]

    operations = [
        # migrations.CreateModel(
        #     name='User',
        #     fields=[
        #         ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('password', models.CharField(max_length=128, verbose_name='password')),
        #         ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
        #         ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
        #         ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
        #         ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
        #         ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
        #         ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
        #         ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
        #         ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
        #         ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
        #         ('crypt6_password', models.CharField(blank=True, default='', max_length=128)),
        #         ('unix_username', models.CharField(default=supervisr.core.models.get_random_string, editable=False, max_length=32)),
        #         ('unix_userid', models.IntegerField(default=supervisr.core.models.get_userid)),
        #         ('locale', models.CharField(default='en-US', max_length=5)),
        #         ('news_subscribe', models.BooleanField(default=False)),
        #         ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
        #         ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
        #     ],
        #     options={
        #         'verbose_name_plural': 'users',
        #         'verbose_name': 'user',
        #         'abstract': False,
        #     },
        #     managers=[
        #         ('objects', django.contrib.auth.models.UserManager()),
        #     ],
        # ),
        # migrations.RunPython(migrate_profile_data),
        migrations.RemoveField(
            model_name='userprofile',
            name='user',
        ),
        migrations.DeleteModel(
            name='UserProfile',
        ),
    ]
