# Generated by Django 2.1.1 on 2018-09-19 09:41

import uuid

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('supervisr_core', '0007_auto_20180918_1638'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseRecord',
            fields=[
                ('useracquirable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='supervisr_core.UserAcquirable')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('enabled', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('supervisr_core.useracquirable', models.Model),
        ),
        migrations.CreateModel(
            name='ReverseZone',
            fields=[
                ('useracquirable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='supervisr_core.UserAcquirable')),
                ('provideracquirable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='supervisr_core.ProviderAcquirable')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('soa_mname', models.TextField()),
                ('soa_rname', models.TextField()),
                ('soa_serial', models.IntegerField()),
                ('soa_refresh', models.IntegerField(default=86400)),
                ('soa_retry', models.IntegerField(default=7200)),
                ('soa_expire', models.IntegerField(default=3600000)),
                ('soa_ttl', models.IntegerField(default=172800)),
                ('enabled', models.BooleanField(default=True)),
                ('zone_ip', models.GenericIPAddressField(unpack_ipv4=True)),
                ('netmask', models.IntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=('supervisr_core.provideracquirable', 'supervisr_core.useracquirable', models.Model),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('useracquirable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='supervisr_core.UserAcquirable')),
                ('provideracquirable_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, to='supervisr_core.ProviderAcquirable')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('soa_mname', models.TextField()),
                ('soa_rname', models.TextField()),
                ('soa_serial', models.IntegerField()),
                ('soa_refresh', models.IntegerField(default=86400)),
                ('soa_retry', models.IntegerField(default=7200)),
                ('soa_expire', models.IntegerField(default=3600000)),
                ('soa_ttl', models.IntegerField(default=172800)),
                ('enabled', models.BooleanField(default=True)),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supervisr_core.Domain')),
            ],
            options={
                'abstract': False,
            },
            bases=('supervisr_core.provideracquirable', 'supervisr_core.useracquirable', models.Model),
        ),
        migrations.CreateModel(
            name='DataRecord',
            fields=[
                ('baserecord_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='supervisr_dns.BaseRecord')),
                ('type', models.CharField(choices=[('A', 'A'), ('AAAA', 'AAAA'), ('AFSDB', 'AFSDB'), ('APL', 'APL'), ('CAA', 'CAA'), ('CDNSKEY', 'CDNSKEY'), ('CDS', 'CDS'), ('CERT', 'CERT'), ('CNAME', 'CNAME'), ('DHCID', 'DHCID'), ('DLV', 'DLV'), ('DNAME', 'DNAME'), ('DNSKEY', 'DNSKEY'), ('DS', 'DS'), ('HIP', 'HIP'), ('IPSECKEY', 'IPSECKEY'), ('KEY', 'KEY'), ('KX', 'KX'), ('LOC', 'LOC'), ('MX', 'MX'), ('NAPTR', 'NAPTR'), ('NS', 'NS'), ('NSEC', 'NSEC'), ('NSEC3', 'NSEC3'), ('NSEC3PARAM', 'NSEC3PARAM'), ('OPENPGPKEY', 'OPENPGPKEY'), ('PTR', 'PTR'), ('RRSIG', 'RRSIG'), ('RP', 'RP'), ('SIG', 'SIG'), ('SRV', 'SRV'), ('SSHFP', 'SSHFP'), ('TA', 'TA'), ('TKEY', 'TKEY'), ('TLSA', 'TLSA'), ('TSIG', 'TSIG'), ('TXT', 'TXT'), ('URI', 'URI')], max_length=10)),
                ('content', models.TextField()),
                ('ttl', models.IntegerField(default=3600)),
                ('priority', models.IntegerField(default=0)),
            ],
            options={
                'abstract': False,
            },
            bases=('supervisr_dns.baserecord',),
        ),
        migrations.CreateModel(
            name='SetRecord',
            fields=[
                ('baserecord_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='supervisr_dns.BaseRecord')),
                ('append_name', models.BooleanField(default=False)),
                ('records', models.ManyToManyField(blank=True, related_name='set', to='supervisr_dns.BaseRecord')),
            ],
            options={
                'abstract': False,
            },
            bases=('supervisr_dns.baserecord',),
        ),
        migrations.AddField(
            model_name='zone',
            name='records',
            field=models.ManyToManyField(blank=True, to='supervisr_dns.BaseRecord'),
        ),
        migrations.AddField(
            model_name='reversezone',
            name='records',
            field=models.ManyToManyField(blank=True, to='supervisr_dns.BaseRecord'),
        ),
    ]
