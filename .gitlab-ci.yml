# Global Variables
before_script:
  - "python3 --version"
  - "python3 -m pip install -U virtualenv"
  - "rm -rf env/"
  - "virtualenv env"
  - "source env/bin/activate"
  - "pip install --no-cache-dir -U -r requirements.txt -r requirements-dev.txt"
  - "mkdir ~/.ssh"
  - "cp .gitlab/known_hosts ~/.ssh/"

stages:
  - test-static
  - test
  - test-db
  - build-release
  - deploy
  - deploy-docs
image: python:3.6
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE: supervisr_test
  MYSQL_ROOT_PASSWORD: 'EK-5jnKfjrGRm<77'
  SUPERVISR_LOCAL_SETTINGS: supervisr.local_settings_ci
services:
  - redis:latest
  - mariadb:latest

# Static code analysis
isort:
  except:
    - prod
  script:
    - inv ci.isort
  stage: test-static
pyroma:
  except:
    - prod
  script:
    - inv ci.pyroma
  stage: test-static
safety:
  except:
    - prod
  script:
    - safety check --full-report
  stage: test-static
prospector:
  except:
    - prod
  script:
    - inv ci.prospector
  stage: test-static
bandit:
 except:
   - prod
 script:
   - bandit -x migrations/ -r supervisr/
 stage: test-static
pylint:
  except:
    - prod
  script:
    - inv ci.lint
  stage: test-static

# Tests
pip_install:
  before_script:
    - "python3 -m pip install -U virtualenv"
  except:
    - prod
  script:
    - "virtualenv env"
    - "source env/bin/activate"
    - "pip install git+${CI_REPOSITORY_URL}@${CI_COMMIT_REF_NAME}#egg=supervisr[dev]"
    - "cp -R ./env/lib/python*/site-packages/supervisr/cli/_seed/* ."
    - "python manage.py migrate"
check_template_syntax:
  except:
    - prod
  script:
    - ./manage.py check_template_syntax
  stage: test
unittest:
  except:
    - prod
  script:
    - inv ci.unittest
  stage: test
  artifacts:
    reports:
      junit: unittest.xml
coverage:
  except:
    - prod
  script:
    - inv ci.coverage
  stage: test

# Test Database migrations
migration_mariadb:
  except:
    - prod
  script:
    - inv supervisr.migrate
  stage: test-db

# Build releases
# build-docker:
#   image: docker:stable
#   before_script: []
#   script:
#     - docker info
#     - apt-get update && apt-get install -y curl
#     - curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
#     - chmod +x /usr/local/bin/docker-compose
#     - docker-compose --file build/docker/docker-compose.yml build supervisr
#     - docker-compose --file build/docker/docker-compose.yml run supervisr build/docker/start_wrapper.sh "inv ci.unittest"
#   only:
#     - tags
#     - 229-appliance-packaging
#   stage: build-release
# build-debian:
#   script:
#     - apt-get update && apt-get install -y libncurses5-dev libglib2.0-dev libgeoip-dev libtokyocabinet-dev zlib1g-dev libncursesw5-dev build-essential libbz2-dev dh-autoreconf dh-python dh-systemd dh-virtualenv dpkg-dev debhelper dh-exec
#     - inv build.debian
#   only:
#     - tags
#     - 229-appliance-packaging
#   stage: build-release
# build-appliance:
#   script:
#     - wget https://apt.puppetlabs.com/puppet5-release-stretch.deb
#     - dpkg -i puppet5-release-stretch.deb
#     - apt-get update && apt-get install -y puppet-agent unzip
#     - wget https://releases.hashicorp.com/packer/1.2.5/packer_1.2.5_linux_amd64.zip
#     - unzip packer_1.2.5_linux_amd64.zip -d /bin
#     - inv build.appliance
#   artifacts:
#     paths:
#       - build/packer/output-supervisr-debian/packer-supervisr-debian.ova
#     expire_in: 1 day
#   only:
#     - tags
#     - 229-appliance-packaging
#   stage: build-release

# Deploy documentation
deploy-doc:
  stage: deploy-docs
  only: 
    - master
  services: []
  environment:
    name: public_docs
    url: "https://supervisr.beryju.org/docs/master/"
  script:
    - 'apt update'
    - 'apt install -y rsync'
    - "eval $(ssh-agent -s)"
    - "echo \"${CI_SSH_PRIVATE}\" | ssh-add -"
    - 'mkdocs build'
    - 'rsync -avh --delete site/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:supervisr.beryju.org/docs/${CI_COMMIT_REF_NAME}"'
deploy-dev-docs:
  stage: deploy-docs
  only: 
    - master
  services: []
  environment:
    name: public_docs
    url: "https://supervisr.beryju.org/dev-docs/master/"
  script:
    - 'apt update'
    - 'apt install -y rsync'
    - 'rm -rf docgen/'
    - "eval $(ssh-agent -s)"
    - "echo \"${CI_SSH_PRIVATE}\" | ssh-add -"
    - 'inv ci.docs'
    - 'rsync -avh --delete docgen/supervisr/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:supervisr.beryju.org/dev-docs/${CI_COMMIT_REF_NAME}"'


# Deploy
deploy:
  before_script: []
  services: []
  environment:
    name: production
    url: "https://my.beryju.org"
  only:
    - prod
  script:
    - "eval $(ssh-agent -s)"
    - "mkdir ~/.ssh -p"
    - "echo \"${CI_SSH_PRIVATE}\" | ssh-add -"
    - "ssh beryjuorg@ory1-web-prod-1.ory1.beryju.org \"./update_supervisr.sh\""
  stage: deploy
