# Global Variables
before_script:
  - "python3 -m pip install -U virtualenv"
  - "rm -rf env/"
  - "virtualenv env"
  - "source env/bin/activate"
  - "pip install --no-cache-dir -U -r requirements.txt -r requirements-dev.txt"
  - "mkdir .ssh"
  - "echo '|1|P2xx16Gs0+6xoeE67TuPuW8Sxss=|8zGexiDNq2MZUBcjBu/CHlZCxk8= ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQD3uEYmUDDrmJO4Sj3Bcx4YwLFdaPz18ZRWQbULvXaXIOpOZcudCkKxnWUT4ZBB1tPpH/WphVOBxse8fkFYo0eXTkrM1H7ByoeSoUwUVS4G0AFs8QRWKm8Ssgh5kmvCOeaSWxVaFMF+1thnunqnL1g7OtB85XTpu/KOG/l+VlpAob31gkqovowcbc8Wr6/KueqDii69drwfiAaI2iJiP2gFG5i8+QsvfhY3MwNWUJlmj7u5UbTzr2Sh1UhjCZwLWC4u9he7cV+sa8HcQlvYX1YYUmHmR2RXIMtYeVlK7F2pM0dNdhPkOIrSiIAn6ouxFL+2gumV8XU1X1lfHLM7MV4/' > .ssh/known_hosts"
stages:
  - test
  - test-db
  - build-release
  - deploy
  - deploy-docs
image: python:3.6
variables:
  # Configure mysql environment variables (https://hub.docker.com/r/_/mysql/)
  MYSQL_DATABASE: supervisr_test
  MYSQL_ROOT_PASSWORD: 'EK-5jnKfjrGRm<77'
  SUPERVISR_LOCAL_SETTINGS: supervisr.local_settings_ci
services:
  - redis:latest
  - mariadb:latest

# All normal tests
coverage:
  except:
    - prod
  script:
    - "inv ci.coverage"
  stage: test
pip_install:
  before_script:
    - "python3 -m pip install -U virtualenv"
  except:
    - prod
  script:
    - "virtualenv env"
    - "source env/bin/activate"
    - "pip install git+${CI_REPOSITORY_URL}@${CI_COMMIT_REF_NAME}#egg=supervisr[dev]"
    - "cp -R ./env/lib/python*/site-packages/supervisr/cli/_seed/* ."
    - "python manage.py migrate"
# isort:
#   except:
#     - prod
#   script:
#     - "inv ci.isort"
#   stage: test
migration_mariadb:
  except:
    - prod
  script:
    - "inv supervisr.migrate"
  stage: test
pyroma:
  except:
    - prod
  script:
    - "inv ci.pyroma"
  stage: test
# prospector:
#   except:
#     - prod
#   script:
#     - "inv ci.prospector"
#   stage: test
#   cache:
#     paths:
#       - env/
pylint:
  except:
    - prod
  script:
    - "inv ci.lint"
  stage: test
unittest:
  except:
    - prod
  script:
    - "inv ci.unittest"
  stage: test

# Release test
bundle_release:
  before_script:
    - ''
  image: debian:stable
  script:
    - apt install -y libncurses5-dev libglib2.0-dev libgeoip-dev libtokyocabinet-dev zlib1g-dev libncursesw5-dev build-essential libbz2-dev dh-autoreconf dh-python dh-systemd dh-virtualenv dpkg-dev debhelper dh-exec
    - dpkg-buildpackage -us -uc
  only:
    - tags
  stage: build-release

# Deploy documentation
deploy-doc:
  stage: deploy-docs
  services: []
  environment:
    name: public_docs
    url: "https://supervisr.beryju.org/docs/master/"
  script:
    - 'apt update'
    - 'apt install -y rsync'
    - 'pip install "tornado<5.0,>=4.1"'
    - 'mkdocs build'
    - 'rsync -avh --delete site/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:supervisr.beryju.org/docs/${CI_COMMIT_REF_NAME}"'
deploy-dev-docs:
  stage: deploy-docs
  services: []
  environment:
    name: public_docs
    url: "https://supervisr.beryju.org/dev-docs/master/"
  script:
    - 'apt update'
    - 'apt install -y rsync'
    - 'inv supervisr.docs'
    - 'rsync -avh --delete docgen/supervisr/* "beryjuorg@ory1-web-prod-1.ory1.beryju.org:supervisr.beryju.org/dev-docs/${CI_COMMIT_REF_NAME}"'


# Deploy
deploy:
  before_script: []
  services: []
  environment:
    name: production
    url: "https://my.beryju.org"
  only:
    - prod
  script:
    - "eval $(ssh-agent -s)"
    - "mkdir ~/.ssh -p"
    - "echo \"${CI_SSH_PRIVATE}\" | ssh-add -"
    - "ssh beryjuorg@ory1-web-prod-1.ory1.beryju.org \"./update_supervisr.sh\""
  stage: deploy
