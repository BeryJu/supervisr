{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the supervisr documentation. \u00b6 supervisr aims to be a single-pane of glass for all your IT needs. supervisr provides the following features: Authentication via a multitude of providers ActiveDirectory Integration LDAP Integration OAuth2 Client Integration Authentication Brokering OAuth2 Server SAML IDP DNS Management Native PowerDNS Support Mail Management Native Postfix and Exim Support Find out more about installing it here . \u00b6","title":"Home"},{"location":"#welcome-to-the-supervisr-documentation","text":"supervisr aims to be a single-pane of glass for all your IT needs. supervisr provides the following features: Authentication via a multitude of providers ActiveDirectory Integration LDAP Integration OAuth2 Client Integration Authentication Brokering OAuth2 Server SAML IDP DNS Management Native PowerDNS Support Mail Management Native Postfix and Exim Support","title":"Welcome to the supervisr documentation."},{"location":"#find-out-more-about-installing-it-here","text":"","title":"Find out more about installing it here."},{"location":"API/OAuth 2/","text":"OAuth 2 \u00b6 Note This requires supervisr.auth.oauth.provider . OAuth 2 endpoint URLs \u00b6 Authorize: https://<installation URL>/app/mod/auth/oauth/provider/authorize// Token: https://<installation URL>/app/mod/auth/oauth/provider/token/ API calls \u00b6 API calls should be made with a Authorization : Bearer Header, which contains your access token. For example: curl -X GET \\ -H \"Authorization: Bearer your_api_token\" \\ \"https://<installation URL>/api/core/v1/accounts/me/?format=openid\" ...which would return... { 'id': 1, 'pk': 1, 'first_name': 'System User', 'email': 'root@localhost', }","title":"OAuth 2"},{"location":"API/OAuth 2/#oauth-2","text":"Note This requires supervisr.auth.oauth.provider .","title":"OAuth 2"},{"location":"API/OAuth 2/#oauth-2-endpoint-urls","text":"Authorize: https://<installation URL>/app/mod/auth/oauth/provider/authorize// Token: https://<installation URL>/app/mod/auth/oauth/provider/token/","title":"OAuth 2 endpoint URLs"},{"location":"API/OAuth 2/#api-calls","text":"API calls should be made with a Authorization : Bearer Header, which contains your access token. For example: curl -X GET \\ -H \"Authorization: Bearer your_api_token\" \\ \"https://<installation URL>/api/core/v1/accounts/me/?format=openid\" ...which would return... { 'id': 1, 'pk': 1, 'first_name': 'System User', 'email': 'root@localhost', }","title":"API calls"},{"location":"Modules/Bacula/installation/","text":"Installing the Bacula Module \u00b6 Simply run sv module.install https://git.beryju.org/BeryJu.org/supervisr_contrib_bacula.git systemctl restart supervisr After the restart you can see a Bacula entry in the Admin category. In there you can set the DB connection details.","title":"Installation"},{"location":"Modules/Bacula/installation/#installing-the-bacula-module","text":"Simply run sv module.install https://git.beryju.org/BeryJu.org/supervisr_contrib_bacula.git systemctl restart supervisr After the restart you can see a Bacula entry in the Admin category. In there you can set the DB connection details.","title":"Installing the Bacula Module"},{"location":"SSO/external_sources/","text":"External Authentication Sources \u00b6 Twitter: \u00b6 name : twitter request_token_url : https :// api . twitter . com /oauth/ request_token authorization_url : https :// api . twitter . com /oauth/ authenticate access_token_url : https :// api . twitter . com /oauth/ access_token profile_url : https :// api . twitter . com /1.1/account/ verify_credentials . json Facebook: \u00b6 name : facebook authorization_url : https :// www . facebook . com /v2.8/dialog/ oauth access_token_url : https :// graph . facebook . com /v2.8/oauth/ access_token profile_url : https :// graph . facebook . com /v2.8/ me ? fields = name , email , short_name GitHub: \u00b6 name : github authorization_url : https :// github . com /login/oauth/ authorize access_token_url : https :// github . com /login/oauth/ access_token profile_url : https :// api . github . com / user Discord \u00b6 name : discord authorization_url : https :// discordapp . com /api/oauth2/ authorize access_token_url : https :// discordapp . com /api/oauth2/ token profile_url : https :// discordapp . com /api/users/ @ me Google \u00b6 name : google authorization_url : https :// accounts . google . com /o/oauth2/ auth access_token_url : https :// accounts . google . com /o/oauth2/ token profile_url : https :// www . googleapis . com /oauth2/v1/ userinfo","title":"External Authentication Sources"},{"location":"SSO/external_sources/#external-authentication-sources","text":"","title":"External Authentication Sources"},{"location":"SSO/external_sources/#twitter","text":"name : twitter request_token_url : https :// api . twitter . com /oauth/ request_token authorization_url : https :// api . twitter . com /oauth/ authenticate access_token_url : https :// api . twitter . com /oauth/ access_token profile_url : https :// api . twitter . com /1.1/account/ verify_credentials . json","title":"Twitter:"},{"location":"SSO/external_sources/#facebook","text":"name : facebook authorization_url : https :// www . facebook . com /v2.8/dialog/ oauth access_token_url : https :// graph . facebook . com /v2.8/oauth/ access_token profile_url : https :// graph . facebook . com /v2.8/ me ? fields = name , email , short_name","title":"Facebook:"},{"location":"SSO/external_sources/#github","text":"name : github authorization_url : https :// github . com /login/oauth/ authorize access_token_url : https :// github . com /login/oauth/ access_token profile_url : https :// api . github . com / user","title":"GitHub:"},{"location":"SSO/external_sources/#discord","text":"name : discord authorization_url : https :// discordapp . com /api/oauth2/ authorize access_token_url : https :// discordapp . com /api/oauth2/ token profile_url : https :// discordapp . com /api/users/ @ me","title":"Discord"},{"location":"SSO/external_sources/#google","text":"name : google authorization_url : https :// accounts . google . com /o/oauth2/ auth access_token_url : https :// accounts . google . com /o/oauth2/ token profile_url : https :// www . googleapis . com /oauth2/v1/ userinfo","title":"Google"},{"location":"SSO/ldap/authenticating_against_ad/","text":"Authenticating against Active Directory \u00b6 Warning This requires the supervisr.auth.ldap module.","title":"Authenticating against Active Directory"},{"location":"SSO/ldap/authenticating_against_ad/#authenticating-against-active-directory","text":"Warning This requires the supervisr.auth.ldap module.","title":"Authenticating against Active Directory"},{"location":"SSO/oauth/chronograf/","text":"Chronograf \u00b6 Warning This requires the supervisr.auth.oauth.provider module. Chronograf authentication is supported via OAuth 2. This is integrated into the default Chronograf installation. # / etc / systemd / system / multi - user . target . wants / chronograf . service [ Unit ] Description = Open source monitoring and visualization UI for the entire TICK stack . Documentation = \"https://www.influxdata.com/time-series-platform/chronograf/\" After = network - online . target [ Service ] User = chronograf Group = chronograf ExecStart =/ usr / bin / chronograf --host 0.0.0.0 --port 8888 -b /var/lib/chronograf/chronograf-v1.db -c /usr/share/chronograf/canned KillMode = control - group Restart = on - failure Environment = GENERIC_CLIENT_ID =< client_id > Environment = GENERIC_CLIENT_SECRET =< client_secret > Environment = GENERIC_AUTH_URL = https : //< supervisr install url >/ app / mod / auth / oauth / provider / authorize / Environment = GENERIC_TOKEN_URL = https : //< supervisr install url >/ app / mod / auth / oauth / provider / token / Environment = GENERIC_API_URL = https : //< supervisr install url >/ api / app / mod / auth / oauth / provider / v1 / accounts / me / ? format = openid Environment = PUBLIC_URL = http : //< external chronograf URL with port > Environment = TOKEN_SECRET = supersupersecret Environment = GENERIC_SCOPES = read Environment = GENERIC_NAME = supervisr [ Install ] WantedBy = multi - user . target","title":"Chronograf"},{"location":"SSO/oauth/chronograf/#chronograf","text":"Warning This requires the supervisr.auth.oauth.provider module. Chronograf authentication is supported via OAuth 2. This is integrated into the default Chronograf installation. # / etc / systemd / system / multi - user . target . wants / chronograf . service [ Unit ] Description = Open source monitoring and visualization UI for the entire TICK stack . Documentation = \"https://www.influxdata.com/time-series-platform/chronograf/\" After = network - online . target [ Service ] User = chronograf Group = chronograf ExecStart =/ usr / bin / chronograf --host 0.0.0.0 --port 8888 -b /var/lib/chronograf/chronograf-v1.db -c /usr/share/chronograf/canned KillMode = control - group Restart = on - failure Environment = GENERIC_CLIENT_ID =< client_id > Environment = GENERIC_CLIENT_SECRET =< client_secret > Environment = GENERIC_AUTH_URL = https : //< supervisr install url >/ app / mod / auth / oauth / provider / authorize / Environment = GENERIC_TOKEN_URL = https : //< supervisr install url >/ app / mod / auth / oauth / provider / token / Environment = GENERIC_API_URL = https : //< supervisr install url >/ api / app / mod / auth / oauth / provider / v1 / accounts / me / ? format = openid Environment = PUBLIC_URL = http : //< external chronograf URL with port > Environment = TOKEN_SECRET = supersupersecret Environment = GENERIC_SCOPES = read Environment = GENERIC_NAME = supervisr [ Install ] WantedBy = multi - user . target","title":"Chronograf"},{"location":"SSO/oauth/grafana/","text":"Grafana \u00b6 Warning This requires the supervisr.auth.oauth.provider module. Grafana authentication is supported via OAuth 2. This is integrated into the default Grafana installation. # /etc/grafana/grafana.ini ##################### Grafana Configuration Example ##################### #################################### Generic OAuth ########################## [auth.generic_oauth] enabled = true name = supervisr allow_sign_up = true client_id = <client_id> client_secret = <client_secret> scopes = read auth_url = https://<supervisr install url>/app/mod/auth/oauth/provider/authorize/ token_url = https://<supervisr install url>/app/mod/auth/oauth/provider/token/ api_url = https://<supervisr install url>/api/app/mod/auth/oauth/provider/v1/accounts/me/?format=openid","title":"Grafana"},{"location":"SSO/oauth/grafana/#grafana","text":"Warning This requires the supervisr.auth.oauth.provider module. Grafana authentication is supported via OAuth 2. This is integrated into the default Grafana installation. # /etc/grafana/grafana.ini ##################### Grafana Configuration Example ##################### #################################### Generic OAuth ########################## [auth.generic_oauth] enabled = true name = supervisr allow_sign_up = true client_id = <client_id> client_secret = <client_secret> scopes = read auth_url = https://<supervisr install url>/app/mod/auth/oauth/provider/authorize/ token_url = https://<supervisr install url>/app/mod/auth/oauth/provider/token/ api_url = https://<supervisr install url>/api/app/mod/auth/oauth/provider/v1/accounts/me/?format=openid","title":"Grafana"},{"location":"SSO/oauth/sentry/","text":"Sentry \u00b6 Warning This requires the supervisr.auth.oauth.provider module. Installation \u00b6 # Activate Virtualenv source virtualenv/bin/activate # Uninstall any existing versions pip uninstall sentry-auth-supervisr -y # Install from git pip install git+https://git.beryju.org/BeryJu.org/sentry-auth-supervisr.git Configuration \u00b6 Set the following settings in sentry.conf.py . SUPERVISR_APP_ID = \"<client_id>\" SUPERVISR_API_SECRET = \"<client_secret>\" You can also set SUPERVISR_BASE_DOMAIN to the supervisr installation URL if you want to authenticate against your own install. Default is my.beryju.org .","title":"Sentry"},{"location":"SSO/oauth/sentry/#sentry","text":"Warning This requires the supervisr.auth.oauth.provider module.","title":"Sentry"},{"location":"SSO/oauth/sentry/#installation","text":"# Activate Virtualenv source virtualenv/bin/activate # Uninstall any existing versions pip uninstall sentry-auth-supervisr -y # Install from git pip install git+https://git.beryju.org/BeryJu.org/sentry-auth-supervisr.git","title":"Installation"},{"location":"SSO/oauth/sentry/#configuration","text":"Set the following settings in sentry.conf.py . SUPERVISR_APP_ID = \"<client_id>\" SUPERVISR_API_SECRET = \"<client_secret>\" You can also set SUPERVISR_BASE_DOMAIN to the supervisr installation URL if you want to authenticate against your own install. Default is my.beryju.org .","title":"Configuration"},{"location":"SSO/saml/gitlab/gitlab/","text":"GitLab \u00b6 Warning This requires the supervisr.auth.saml.idp module. GitLab authentication is supported via SAML. This is integrated into the default GitLab Omnibus installation. # /etc/gitlab/gitlab.rb ### OmniAuth Settings ###! Docs: https://docs.gitlab.com/ce/integration/omniauth.html gitlab_rails [ 'omniauth_enabled' ] = true gitlab_rails [ 'omniauth_allow_single_sign_on' ] = [ 'saml' ] gitlab_rails [ 'omniauth_sync_email_from_provider' ] = 'saml' gitlab_rails [ 'omniauth_sync_profile_from_provider' ] = [ 'saml' ] gitlab_rails [ 'omniauth_sync_profile_attributes' ] = [ 'email' ] gitlab_rails [ 'omniauth_auto_sign_in_with_provider' ] = 'saml' gitlab_rails [ 'omniauth_block_auto_created_users' ] = false # gitlab_rails['omniauth_auto_link_ldap_user'] = false gitlab_rails [ 'omniauth_auto_link_saml_user' ] = true # gitlab_rails['omniauth_external_providers'] = ['twitter', 'google_oauth2'] gitlab_rails [ 'omniauth_providers' ] = [ { name : 'saml' , args : { assertion_consumer_service_url : 'https://<gitlab install url>/users/auth/saml/callback' , idp_cert_fingerprint : '<cert fingerprint from /app/mod/auth/saml/idp/settings/SAML2/IDP/>' , idp_sso_target_url : 'https://<supervisr install url>/app/mod/auth/saml/idp/login/' , issuer : 'https://<gitlab install url>' , name_identifier_format : 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddresos' , attribute_statements : { email : [ 'urn:oid:1.3.6.1.4.1.5923.1.1.1.6' ] , first_name : [ 'urn:oid:2.5.4.3' ] , nickname : [ 'urn:oid:2.16.840.1.113730.3.1.241' ] } }, label : 'Supervisr' } ]","title":"GitLab"},{"location":"SSO/saml/gitlab/gitlab/#gitlab","text":"Warning This requires the supervisr.auth.saml.idp module. GitLab authentication is supported via SAML. This is integrated into the default GitLab Omnibus installation. # /etc/gitlab/gitlab.rb ### OmniAuth Settings ###! Docs: https://docs.gitlab.com/ce/integration/omniauth.html gitlab_rails [ 'omniauth_enabled' ] = true gitlab_rails [ 'omniauth_allow_single_sign_on' ] = [ 'saml' ] gitlab_rails [ 'omniauth_sync_email_from_provider' ] = 'saml' gitlab_rails [ 'omniauth_sync_profile_from_provider' ] = [ 'saml' ] gitlab_rails [ 'omniauth_sync_profile_attributes' ] = [ 'email' ] gitlab_rails [ 'omniauth_auto_sign_in_with_provider' ] = 'saml' gitlab_rails [ 'omniauth_block_auto_created_users' ] = false # gitlab_rails['omniauth_auto_link_ldap_user'] = false gitlab_rails [ 'omniauth_auto_link_saml_user' ] = true # gitlab_rails['omniauth_external_providers'] = ['twitter', 'google_oauth2'] gitlab_rails [ 'omniauth_providers' ] = [ { name : 'saml' , args : { assertion_consumer_service_url : 'https://<gitlab install url>/users/auth/saml/callback' , idp_cert_fingerprint : '<cert fingerprint from /app/mod/auth/saml/idp/settings/SAML2/IDP/>' , idp_sso_target_url : 'https://<supervisr install url>/app/mod/auth/saml/idp/login/' , issuer : 'https://<gitlab install url>' , name_identifier_format : 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddresos' , attribute_statements : { email : [ 'urn:oid:1.3.6.1.4.1.5923.1.1.1.6' ] , first_name : [ 'urn:oid:2.5.4.3' ] , nickname : [ 'urn:oid:2.16.840.1.113730.3.1.241' ] } }, label : 'Supervisr' } ]","title":"GitLab"},{"location":"SSO/saml/nextcloud/nextcloud/","text":"Nextcloud \u00b6 Warning This requires the supervisr.auth.saml.idp module. Nextcloud authentication is supported via SAML. This is integrated into the default Nextcloud installation.","title":"Nextcloud"},{"location":"SSO/saml/nextcloud/nextcloud/#nextcloud","text":"Warning This requires the supervisr.auth.saml.idp module. Nextcloud authentication is supported via SAML. This is integrated into the default Nextcloud installation.","title":"Nextcloud"},{"location":"commands/sv/","text":"The sv command \u00b6 sv is a globally installed command used to interact with supervisr. When called without any arguments, you will get an output like this: Available tasks : dev . init Create a new supervisr module module . install Install a supervisr module from Git run . migrate Apply migrations run . ui Run Angular CLI debug server run . web Run CherryPY - based application server run . worker Run Celery worker run . worker - monitor Run Celery flower run . worker - scheduler Run Celery beat worker utils . generate - secret - key Generate Django SECRET_KEY All these tasks are either used in service definitions or can be used for module development. Notice If you install supervisr in a virtualenv, more tasks specific to development will be shown. You can also use sv to interact with Django's manage.py by executing sv manage [...] . These commands will be passed to Django and will be called within supervisr's virtualenv.","title":"sv"},{"location":"commands/sv/#the-sv-command","text":"sv is a globally installed command used to interact with supervisr. When called without any arguments, you will get an output like this: Available tasks : dev . init Create a new supervisr module module . install Install a supervisr module from Git run . migrate Apply migrations run . ui Run Angular CLI debug server run . web Run CherryPY - based application server run . worker Run Celery worker run . worker - monitor Run Celery flower run . worker - scheduler Run Celery beat worker utils . generate - secret - key Generate Django SECRET_KEY All these tasks are either used in service definitions or can be used for module development. Notice If you install supervisr in a virtualenv, more tasks specific to development will be shown. You can also use sv to interact with Django's manage.py by executing sv manage [...] . These commands will be passed to Django and will be called within supervisr's virtualenv.","title":"The sv command"},{"location":"extending_supervisr/creating_a_module/","text":"Creating a module \u00b6 Setting up a development environment \u00b6 Set up a new virtualenv with a least Python 3.5 and install the supervisr module. virtualenv -p python3 env source env/bin/activate pip install supervisr [ dev ] This will install all required dependencies.","title":"Creating a module"},{"location":"extending_supervisr/creating_a_module/#creating-a-module","text":"","title":"Creating a module"},{"location":"extending_supervisr/creating_a_module/#setting-up-a-development-environment","text":"Set up a new virtualenv with a least Python 3.5 and install the supervisr module. virtualenv -p python3 env source env/bin/activate pip install supervisr [ dev ] This will install all required dependencies.","title":"Setting up a development environment"},{"location":"extending_supervisr/overwriting_settings/","text":"Overwriting Settings \u00b6 Settings from modules are automatically loaded from the supervisr.<name>.settings module, if it exists. These settings overwrite the global django settings.","title":"Overwriting settings"},{"location":"extending_supervisr/overwriting_settings/#overwriting-settings","text":"Settings from modules are automatically loaded from the supervisr.<name>.settings module, if it exists. These settings overwrite the global django settings.","title":"Overwriting Settings"},{"location":"extending_supervisr/ui_integration/","text":"UI Integration \u00b6 Direct UI Integration is by default disable for Modules, since they are meant to improve the backend.","title":"UI integration"},{"location":"extending_supervisr/ui_integration/#ui-integration","text":"Direct UI Integration is by default disable for Modules, since they are meant to improve the backend.","title":"UI Integration"},{"location":"faq/error_str_object_has_no_attribute_tzinfo/","text":"error'str' object has no attribute 'tzinfo' \u00b6 This error can happen in supervisr.contrib.bacula, when bacula is using an older MySQL version. Older MySQL versions (<=5.6) don't require default timestampts to be valid, so they get set to 0000-00-00 00:00:00 , which is invalid. Use this command on your bacula database to fix the error: -- Table Job ALTER TABLE Job MODIFY COLUMN SchedTime datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Job MODIFY COLUMN StartTime datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Job MODIFY COLUMN EndTime datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Job MODIFY COLUMN RealEndTime datetime DEFAULT '1970-01-01 00:00:00' ; UPDATE Job SET SchedTime = '1970-01-01 00:00:00' WHERE SchedTime = '0000-00-00 00:00:00' ; UPDATE Job SET StartTime = '1970-01-01 00:00:00' WHERE StartTime = '0000-00-00 00:00:00' ; UPDATE Job SET EndTime = '1970-01-01 00:00:00' WHERE EndTime = '0000-00-00 00:00:00' ; UPDATE Job SET RealEndTime = '1970-01-01 00:00:00' WHERE RealEndTime = '0000-00-00 00:00:00' ; -- Table Media ALTER TABLE Media MODIFY COLUMN FirstWritten datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Media MODIFY COLUMN LastWritten datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Media MODIFY COLUMN LabelDate datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Media MODIFY COLUMN InitialWrite datetime DEFAULT '1970-01-01 00:00:00' ; UPDATE Media SET FirstWritten = '1970-01-01 00:00:00' WHERE FirstWritten = '0000-00-00 00:00:00' ; UPDATE Media SET LastWritten = '1970-01-01 00:00:00' WHERE LastWritten = '0000-00-00 00:00:00' ; UPDATE Media SET LabelDate = '1970-01-01 00:00:00' WHERE LabelDate = '0000-00-00 00:00:00' ; UPDATE Media SET InitialWrite = '1970-01-01 00:00:00' WHERE InitialWrite = '0000-00-00 00:00:00' ;","title":"error'str' object has no attribute 'tzinfo'"},{"location":"faq/error_str_object_has_no_attribute_tzinfo/#errorstr-object-has-no-attribute-tzinfo","text":"This error can happen in supervisr.contrib.bacula, when bacula is using an older MySQL version. Older MySQL versions (<=5.6) don't require default timestampts to be valid, so they get set to 0000-00-00 00:00:00 , which is invalid. Use this command on your bacula database to fix the error: -- Table Job ALTER TABLE Job MODIFY COLUMN SchedTime datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Job MODIFY COLUMN StartTime datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Job MODIFY COLUMN EndTime datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Job MODIFY COLUMN RealEndTime datetime DEFAULT '1970-01-01 00:00:00' ; UPDATE Job SET SchedTime = '1970-01-01 00:00:00' WHERE SchedTime = '0000-00-00 00:00:00' ; UPDATE Job SET StartTime = '1970-01-01 00:00:00' WHERE StartTime = '0000-00-00 00:00:00' ; UPDATE Job SET EndTime = '1970-01-01 00:00:00' WHERE EndTime = '0000-00-00 00:00:00' ; UPDATE Job SET RealEndTime = '1970-01-01 00:00:00' WHERE RealEndTime = '0000-00-00 00:00:00' ; -- Table Media ALTER TABLE Media MODIFY COLUMN FirstWritten datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Media MODIFY COLUMN LastWritten datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Media MODIFY COLUMN LabelDate datetime DEFAULT '1970-01-01 00:00:00' ; ALTER TABLE Media MODIFY COLUMN InitialWrite datetime DEFAULT '1970-01-01 00:00:00' ; UPDATE Media SET FirstWritten = '1970-01-01 00:00:00' WHERE FirstWritten = '0000-00-00 00:00:00' ; UPDATE Media SET LastWritten = '1970-01-01 00:00:00' WHERE LastWritten = '0000-00-00 00:00:00' ; UPDATE Media SET LabelDate = '1970-01-01 00:00:00' WHERE LabelDate = '0000-00-00 00:00:00' ; UPDATE Media SET InitialWrite = '1970-01-01 00:00:00' WHERE InitialWrite = '0000-00-00 00:00:00' ;","title":"error'str' object has no attribute 'tzinfo'"},{"location":"faq/mysql/index_size/","text":"Index column size too large. The maximum column size is 767 bytes. \u00b6 Make sure the Database is created with utf8mb4 . Also make sure these settings are set: ALTER DATABASE supervisr CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ; SET GLOBAL innodb_file_format = ` Barracuda ` ; SET GLOBAL innodb_file_per_table = ` ON ` ; SET GLOBAL innodb_large_prefix = ` ON ` ;","title":"Index size"},{"location":"faq/mysql/index_size/#index-column-size-too-large-the-maximum-column-size-is-767-bytes","text":"Make sure the Database is created with utf8mb4 . Also make sure these settings are set: ALTER DATABASE supervisr CHARACTER SET = utf8mb4 COLLATE = utf8mb4_unicode_ci ; SET GLOBAL innodb_file_format = ` Barracuda ` ; SET GLOBAL innodb_file_per_table = ` ON ` ; SET GLOBAL innodb_large_prefix = ` ON ` ;","title":"Index column size too large. The maximum column size is 767 bytes."},{"location":"installation/debian_package/","text":"Debian installation of supervisr \u00b6 Add the repo Key \u00b6 wget -O - -q https://apt.beryju.org/public.key | apt-key add - Add the repo with your API Key \u00b6 deb https://supervisr.beryju.org/deb/ stable supervisr Install package \u00b6 apt update apt install mysql-server supervisr Info If you already have MySQL setup, or plan on using a separate MySQL Server, install supervisr using apt install supervisr","title":"Debian Packages"},{"location":"installation/debian_package/#debian-installation-of-supervisr","text":"","title":"Debian installation of supervisr"},{"location":"installation/debian_package/#add-the-repo-key","text":"wget -O - -q https://apt.beryju.org/public.key | apt-key add -","title":"Add the repo Key"},{"location":"installation/debian_package/#add-the-repo-with-your-api-key","text":"deb https://supervisr.beryju.org/deb/ stable supervisr","title":"Add the repo with your API Key"},{"location":"installation/debian_package/#install-package","text":"apt update apt install mysql-server supervisr Info If you already have MySQL setup, or plan on using a separate MySQL Server, install supervisr using apt install supervisr","title":"Install package"},{"location":"installation/docker/","text":"Docker installation of supervisr \u00b6 Since supervisr consists of multiple services, we recommend using docker-compose for this. Warning The pre-built image is currently unable to install custom third-party extensions. For more information see BeryJu.org/supervisr#735 Pre-built images \u00b6 To run supervisr using pre-built images, use the docker-compose.yml file from here . This will start a supervisr instance, one task runner instance, one task scheduler instance and one task monitor instance. The webinterface will be exposed on port 8000 Self-built images \u00b6 If you want to build custom images with custom changes, you can use this docker-compose.yml file. This will build a new beryjuorg/supervisr image, and use it to run the supervisr stack. Changing MySQL credentials \u00b6 To change the MySQL password, adjust it in docker-compose.yml ... [...] - MYSQL_DATABASE = supervisr - MYSQL_USER=supervisr - MYSQL_PASSWORD=<new password> redis: image: redis:latest [...] ...and supervisr/local_settings_docker.py [...] 'NAME': 'supervisr', 'USER': 'supervisr', 'PASSWORD': '<new password>', 'HOST': 'db', 'PORT': '', [...]","title":"Docker"},{"location":"installation/docker/#docker-installation-of-supervisr","text":"Since supervisr consists of multiple services, we recommend using docker-compose for this. Warning The pre-built image is currently unable to install custom third-party extensions. For more information see BeryJu.org/supervisr#735","title":"Docker installation of supervisr"},{"location":"installation/docker/#pre-built-images","text":"To run supervisr using pre-built images, use the docker-compose.yml file from here . This will start a supervisr instance, one task runner instance, one task scheduler instance and one task monitor instance. The webinterface will be exposed on port 8000","title":"Pre-built images"},{"location":"installation/docker/#self-built-images","text":"If you want to build custom images with custom changes, you can use this docker-compose.yml file. This will build a new beryjuorg/supervisr image, and use it to run the supervisr stack.","title":"Self-built images"},{"location":"installation/docker/#changing-mysql-credentials","text":"To change the MySQL password, adjust it in docker-compose.yml ... [...] - MYSQL_DATABASE = supervisr - MYSQL_USER=supervisr - MYSQL_PASSWORD=<new password> redis: image: redis:latest [...] ...and supervisr/local_settings_docker.py [...] 'NAME': 'supervisr', 'USER': 'supervisr', 'PASSWORD': '<new password>', 'HOST': 'db', 'PORT': '', [...]","title":"Changing MySQL credentials"},{"location":"installation/error_reporting/","text":"Error Reporting \u00b6 To comply with the GDPR, error-reporting is disabled by default. To enable it, you can un-comment the following setting in your config.yml (Debian) or local.yml (Source) file: sentry : https://c5f3fa4e642d4dbfaa5db684bd0f6a13@sentry.services.beryju.org/6 This will automatically send errors to sentry.services.beryju.org . The Data includes servername, client IP address, signed in username and browser information. You can also use this variable to send errors to your own Sentry install.","title":"Error reporting"},{"location":"installation/error_reporting/#error-reporting","text":"To comply with the GDPR, error-reporting is disabled by default. To enable it, you can un-comment the following setting in your config.yml (Debian) or local.yml (Source) file: sentry : https://c5f3fa4e642d4dbfaa5db684bd0f6a13@sentry.services.beryju.org/6 This will automatically send errors to sentry.services.beryju.org . The Data includes servername, client IP address, signed in username and browser information. You can also use this variable to send errors to your own Sentry install.","title":"Error Reporting"},{"location":"installation/source/","text":"Installation directly from source \u00b6 Supervisr is a python application which requires Python 3.5. To keep dependencies from clashing, we reccomend the usage of a virtualenv. Installation of OS dependencies \u00b6 Debian \u00b6 apt install python3.5 python3-pip python3-virtualenv git Download supervisr \u00b6 # Change to whatever folder you plan to install supervisr to # cd /opt/ git clone https://git.beryju.org/BeryJu.org/supervisr.git cp supervisr/environments/default.yml supervisr/environments/local.yml # Adjust install settings, DB type, etc vi supervisr/environments/local.yml Installation of Python dependencies \u00b6 With virtualenv \u00b6 virtualenv --python = python3.5 env source env/bin/activate pip install -U -r requirements.txt Without virtualenv \u00b6 pip install -U -r requirements.txt Installing Database Migrations \u00b6 ./sv manage migrate session Installing System Services and scripts \u00b6 sudo cp build/debian/*.service /lib/systemd/system/ # Adjust the path to whatever path you installed supervisr in. sudo vi /lib/systemd/system/supervisr* sudo systemctl daemon-reload sudo systemctl enable 'supervisr*' sudo systemctl start 'supervisr*' ln -s sv /usr/share/bin supervisr should now be listening on port 8000.","title":"From source"},{"location":"installation/source/#installation-directly-from-source","text":"Supervisr is a python application which requires Python 3.5. To keep dependencies from clashing, we reccomend the usage of a virtualenv.","title":"Installation directly from source"},{"location":"installation/source/#installation-of-os-dependencies","text":"","title":"Installation of OS dependencies"},{"location":"installation/source/#debian","text":"apt install python3.5 python3-pip python3-virtualenv git","title":"Debian"},{"location":"installation/source/#download-supervisr","text":"# Change to whatever folder you plan to install supervisr to # cd /opt/ git clone https://git.beryju.org/BeryJu.org/supervisr.git cp supervisr/environments/default.yml supervisr/environments/local.yml # Adjust install settings, DB type, etc vi supervisr/environments/local.yml","title":"Download supervisr"},{"location":"installation/source/#installation-of-python-dependencies","text":"","title":"Installation of Python dependencies"},{"location":"installation/source/#with-virtualenv","text":"virtualenv --python = python3.5 env source env/bin/activate pip install -U -r requirements.txt","title":"With virtualenv"},{"location":"installation/source/#without-virtualenv","text":"pip install -U -r requirements.txt","title":"Without virtualenv"},{"location":"installation/source/#installing-database-migrations","text":"./sv manage migrate session","title":"Installing Database Migrations"},{"location":"installation/source/#installing-system-services-and-scripts","text":"sudo cp build/debian/*.service /lib/systemd/system/ # Adjust the path to whatever path you installed supervisr in. sudo vi /lib/systemd/system/supervisr* sudo systemctl daemon-reload sudo systemctl enable 'supervisr*' sudo systemctl start 'supervisr*' ln -s sv /usr/share/bin supervisr should now be listening on port 8000.","title":"Installing System Services and scripts"}]}